!pip install google-generativeai Pillow

import os
os.environ["GEMINI_API_KEY"] = "AIzaSyCLcGHLYnbeiZc0oFmT6_qOoL5oz1AV2cw"

import google.generativeai as genai
from PIL import Image
import base64
from io import BytesIO

# Initialize the Gemini client
model = genai.GenerativeModel('gemini-1.5-flash')

def analyze_food_image(image_path):
    # Open the image file
    with open(image_path, "rb") as image_file:
        image_bytes = image_file.read()

    # Convert image to base64
    encoded_image = base64.b64encode(image_bytes).decode("utf-8")

    # Prepare the request
    contents = [
        {
            "inline_data": {
                "mime_type": "image/jpeg",
                "data": encoded_image
            }
        },
        {
            "text": (
                "You are a certified nutritionist. Carefully analyze this food image. "
                "List each food item you see, estimate the calories for each item and the total calories. "
                "Include portion size estimates and any basic nutrition advice for a healthy diet. "
                "Respond in clear, concise language suitable for a user who wants to track their daily intake."
            )
        }
    ]

    # Send the request to the Gemini API
    response = model.generate_content(contents)

    # Extract and return the response text
    if hasattr(response, 'text'):
        return response.text
    else:
        return "Could not get a text response from the model. Please check the image and try again."


from google.colab import files

# Upload an image
uploaded = files.upload()

# Get the uploaded file name
image_path = next(iter(uploaded))

# Analyze the uploaded image
result = analyze_food_image(image_path)
print(result)

